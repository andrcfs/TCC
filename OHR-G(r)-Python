#André Felipe Sottolichio
#Código para solucionar os OH relativísticos para a componente G(r).
import math as mt
import matplotlib.pyplot as plt
def norm( lista ):#Função de normalização
    lr=max(lista)-min(lista)
    lista_norm = [i/lr for i in lista]	
    return lista_norm
H=10000;h=1/H;l=2;m=3;w=1;E=8.43317;f1=0;f0=0-h;n=[];g=[];o=[];f=[];R=3.5
for i in range(2,int(R*H)):#Este caso é o estado 1d5/2
    r=i/H;    g.append(f0);     n.append(r)
    a=2*(1-5*h**2*((E**2-m**2)-(m*(E+m)*w**2/2)*r**2-l*(l+1)/r**2)/12)*f1
    b=(1+h*h*((E**2-m**2)-(m*(E+m)*w**2/2)*(r-h)**2-l*(l+1)/(r-h)**2)/12)*f0			
    c=1+h*h*((E**2-m**2)-(m*(E+m)*w**2/2)*(r+h)**2-l*(l+1)/(r+h)**2)/12
    x=(a-b)/c;    f0=f1;    f1=x
g_norm=norm(g)#Normalização
f0=0;a=w*mt.sqrt(m*(E+m)/2)
for i in range(2,int(R*H)):#Solução Exata
    r=i/H;    f.append(f0);    o.append(r)
    x=mt.exp(-a*r**2/2)*((a*r**2)**((l+1)/2))*(3.5-1.63703*r**2) 
    f0=x
f_norm=norm(f)
fig = plt.figure()#Configuração dos gráficos
ax = fig.add_subplot(1, 1, 1)
ax.spines['left'].set_position(('data', 0.0))
ax.spines['bottom'].set_position(('data', 0.0))
ax.spines['right'].set_color('none');ax.spines['top'].set_color('none')
ax.autoscale(enable=True, axis='both', tight=None)
plt.plot(n,g,label='g(r)',color='blue')
#plt.plot(o,f_norm,'r--',label='Lg(r)')#Cores ciano e azul para F(r)
plt.title('$1d_{5/2}\quad \mathcal{E}=4.35974$.')
plt.xlabel('r');plt.ylabel('$\psi(r)$',rotation='horizontal');plt.legend()
plt.show()
